{"version":3,"sources":["components/NavBar/NavBar.jsx","components/Layout/Layout.jsx","components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","pages/Home/Home.jsx","components/AddSwimmer/AddSwimmer.jsx","components/Swimmer/Swimmer.jsx","components/SwimmerGallery/SwimmerGallery.jsx","utils/swimmerAPI.js","pages/MyTeam/MyTeam.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["NavBar","loggedUser","handleLogout","useState","Menu","borderless","className","Item","Header","to","id","style","color","fontFamily","fontSize","letterSpacing","position","username","Image","src","photoUrl","avatar","Dropdown","item","icon","text","href","Divider","as","onClick","Layout","ErrorMessage","props","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","tokenService","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","userService","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","logout","login","creds","headers","Headers","stringify","getUser","getProfile","Authorization","isPasswordMatch","passwordOne","passwordConf","SignUpPage","message","passwordError","setError","email","password","state","setState","selectedFile","setSelectedFile","handleChange","e","target","name","value","navigate","useNavigate","a","preventDefault","key","formData","FormData","append","handleSignUpOrLogin","Grid","textAlign","height","width","verticalAlign","Column","maxWidth","Form","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","Field","files","Button","LoginPage","fluid","size","Message","Home","Container","alt","basic","AddSwimmer","handleAddSwimmer","grade","gender","events","Card","background","Group","margin","SwimmerComponent","swimmer","handleDeleteSwimmer","raised","request","_id","SwimmerGallery","swimmers","itemsPerRow","stackable","map","create","deleteSwimmer","swimmerId","getSwimmers","setSwimmers","swimmerAPI","data","useEffect","Row","centered","App","setUser","path","element","index","loggedInUser","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"ucAKe,SAASA,EAAT,GAA+C,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aACzC,EAA8BC,oBAAS,GAAvC,6BAEA,OACI,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACC,UAAU,UAA3B,UACI,cAACF,EAAA,EAAKG,KAAN,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CACIC,GAAG,IACHC,GAAG,OACHC,MAAO,CACHC,MAAO,SACPC,WAAY,WACZC,SAAU,OACVC,cAAe,UAPvB,4BAcR,eAACX,EAAA,EAAKA,KAAN,CAAWY,SAAS,QAApB,UACI,cAACZ,EAAA,EAAKG,KAAN,UACI,cAAC,IAAD,CAAME,GAAE,kBAAMR,QAAN,IAAMA,OAAN,EAAMA,EAAYgB,UAAYN,MAAO,CAAEC,MAAO,SAAtD,SACI,cAACM,EAAA,EAAD,CACIC,IACc,OAAVlB,QAAU,IAAVA,KAAYmB,SAAZ,OACMnB,QADN,IACMA,OADN,EACMA,EAAYmB,SACZ,kEAEVC,QAAM,QAIlB,cAACC,EAAA,EAAD,CAAUC,MAAI,EAACC,KAAK,cAApB,SACI,eAACF,EAAA,EAASlB,KAAV,WACA,cAACkB,EAAA,EAASf,KAAV,CAAekB,KAAK,YAAYC,KAAK,eACrC,cAACJ,EAAA,EAASK,QAAV,IACI,cAACL,EAAA,EAASf,KAAV,CAAeqB,GAAG,IAAIF,KAAK,UAA3B,qBAGA,cAACJ,EAAA,EAASf,KAAV,CAAekB,KAAK,aAAaC,KAAK,eACtC,cAACJ,EAAA,EAASf,KAAV,CAAekB,KAAK,WAAWC,KAAK,cACpC,cAACJ,EAAA,EAASK,QAAV,IACA,cAACL,EAAA,EAASf,KAAV,CAAekB,KAAK,mBAAmBD,KAAK,YAC5C,cAACF,EAAA,EAASf,KAAV,CACIkB,KAAK,WACLI,QAAS3B,EACTsB,KAAK,uBAOhC,C,WC3CcM,EAbA,WACX,OACI,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,OAAf,SAEE,cAAC,IAAD,QAKP,E,yCCbU,SAASyB,EAAaC,GACjC,OAAO,sBAAM1B,UAAW,QAAjB,SAA2B0B,EAAMC,OAC3C,C,wCCKC,SAASC,IACP,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BF,IAGcG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAErCC,IAAMC,KAAKC,MAAQ,MAC7BR,aAAaS,WAAW,SACxBV,EAAQ,OAGZ,OAAOA,CACR,CAWD,IAOeW,EAPM,CACnBC,SAlCJ,SAAkBZ,GACVA,EAEFC,aAAaY,QAAQ,QAASb,GAE9BC,aAAaS,WAAW,QAE3B,EA4BCX,WACAe,YAPF,WACEb,aAAaS,WAAW,QACzB,EAMCK,iBAbF,WACE,IAAMf,EAAQD,IACd,OAAOC,EAAQG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAAKU,KAAO,IAC7D,GCzBGC,EAAW,cAwEjB,IAQeC,EARK,CAClBC,OArDF,SAAgBH,GACd,OAAOI,MAAMH,EAAW,SAAU,CAChCI,OAAQ,OACRC,KAAMN,IAEPO,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GAAWD,EAAIE,OAOhBF,EAAIE,OAAOH,MAAK,SAAAI,GAErB,MADAC,QAAQC,IAAIF,GACN,IAAIG,MAAMH,EAASI,IAC1B,GACF,IAEAR,MAAK,gBAAEvB,EAAF,EAAEA,MAAF,OAAaW,EAAaC,SAASZ,EAAnC,GAKP,EA8BCgC,OAxBF,WACErB,EAAaG,aACd,EAuBCmB,MArBF,SAAeC,GACb,OAAOd,MAAMH,EAAW,QAAS,CAC/BI,OAAQ,OACRc,QAAS,IAAIC,QAAQ,CAAC,eAAgB,qBACtCd,KAAMnB,KAAKkC,UAAUH,KAEtBX,MAAK,SAAAC,GAEJ,OAAIA,EAAIC,GAAWD,EAAIE,OAChBF,EAAIE,OAAOH,MAAK,SAAAI,GAErB,MADAC,QAAQC,IAAIF,GACN,IAAIG,MAAMH,EAASI,IAC1B,GACF,IACAR,MAAK,gBAAEvB,EAAF,EAAEA,MAAF,OAAaW,EAAaC,SAASZ,EAAnC,GACP,EAOCsC,QA9BF,WACE,OAAO3B,EAAaI,kBACrB,EA6BCwB,WA1EF,SAAoBzD,GAElB,OADA8C,QAAQC,IAAI,sBACLT,MAAMH,EAAWnC,EAAU,CAChCqD,QAAS,CACPK,cAAe,UAAY7B,EAAaZ,cAGzCwB,MAAK,SAAAC,GAEN,GAAGA,EAAIC,GAAI,OAAOD,EAAIE,OACtB,MAAM,IAAII,MAAM,4DACjB,GACF,GCVD,SAASW,EAAgBC,EAAaC,GACpC,OAAOD,IAAgBC,CACxB,CAEc,SAASC,EAAW/C,GACjC,MAA0B7B,mBAAS,CACjC6E,QAAS,GACTC,eAAe,IAFjB,mBAAOhD,EAAP,KAAciD,EAAd,KAKA,EAA0B/E,mBAAS,CACjCc,SAAU,GACVkE,MAAO,GACPC,SAAU,GACVN,aAAc,KAJhB,mBAAOO,EAAP,KAAcC,EAAd,KAOA,EAAwCnF,mBAAS,IAAjD,mBAAOoF,EAAP,KAAqBC,EAArB,KAEA,SAASC,EAAaC,GACpBJ,EAAS,2BACJD,GADG,kBAELK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,QAE7B,CAED,IAAMC,EAAWC,cAtBuB,4CAwBxC,WAA4BL,GAA5B,iBAAAM,EAAA,yDACEN,EAAEO,iBAEGrB,EAAgBS,EAAMD,SAAUC,EAAMP,cAH7C,yCAGmEI,EAAS,CAAEF,QAAS,wBAAyBC,eAAe,KAH/H,OAUE,IAASiB,KANThB,EAAS,CAAEF,QAAS,GAAIC,eAAe,KAEjCkB,EAAW,IAAIC,UAEZC,OAAO,QAASd,GAETF,EACdc,EAASE,OAAOH,EAAKb,EAAMa,IAX/B,0BAeU7C,EAAYC,OAAO6C,GAf7B,QAiBInE,EAAMsE,sBAENR,EAAS,SAnBb,kDAsBI/B,QAAQC,IAAR,MACAkB,EAAS,CAAEF,QAAS,KAAIA,QAASC,eAAe,IAvBpD,2DAxBwC,sBAwDxC,OACE,cAACsB,EAAA,EAAD,CACEC,UAAU,SACV7F,MAAO,CAAE8F,OAAQ,QAASC,MAAO,SACjCC,cAAc,SAHhB,SAKE,eAACJ,EAAA,EAAKK,OAAN,CAAajG,MAAO,CAAEkG,SAAU,KAAhC,UACE,eAACrG,EAAA,EAAD,CAAQoB,GAAG,KAAKhB,MAAM,OAAO4F,UAAU,SAAvC,UACE,cAACtF,EAAA,EAAD,CAAOC,IAAI,oCADb,cAGA,eAAC2F,EAAA,EAAD,CAAMC,SAlE4B,4CAkElC,UACE,eAACC,EAAA,EAAD,CAASC,SAAO,EAAhB,UACE,cAACH,EAAA,EAAKI,MAAN,CACEtB,KAAK,WACLuB,YAAY,WACZtB,MAAOR,EAAMpE,SACbmG,SAAU3B,EACV4B,UAAQ,IAEV,cAACP,EAAA,EAAKI,MAAN,CACEI,KAAK,QACL1B,KAAK,QACLuB,YAAY,QACZtB,MAAOR,EAAMF,MACbiC,SAAU3B,EACV4B,UAAQ,IAEV,cAACP,EAAA,EAAKI,MAAN,CACEjF,MAAOA,EAAMgD,cACbW,KAAK,WACL0B,KAAK,WACLH,YAAY,WACZtB,MAAOR,EAAMD,SACbgC,SAAU3B,EACV4B,UAAQ,IAEV,cAACP,EAAA,EAAKI,MAAN,CACEjF,MAAOA,EAAMgD,cACbW,KAAK,eACL0B,KAAK,WACLH,YAAY,mBACZtB,MAAOR,EAAMP,aACbsC,SAAU3B,EACV4B,UAAQ,IAEV,cAACP,EAAA,EAAKS,MAAN,UACE,cAACT,EAAA,EAAKI,MAAN,CACEI,KAAK,OACL1B,KAAK,QACLuB,YAAY,eACZC,SAvDd,SAAyB1B,GACvB3B,QAAQC,IAAI0B,EAAEC,OAAO6B,MAAO,gCAC5BhC,EAAgBE,EAAEC,OAAO6B,MAAM,GAChC,MAuDS,cAACC,EAAA,EAAD,CAAQH,KAAK,SAAShH,UAAU,MAAhC,uBAID2B,EAAM+C,QAAU,cAACjD,EAAD,CAAcE,MAAOA,EAAM+C,UAAc,YAKnE,C,oBClHc,SAAS0C,EAAU1F,GAChC,MAA0B7B,mBAAS,IAAnC,mBAAO8B,EAAP,KAAciD,EAAd,KACA,EAA0B/E,mBAAS,CACjCgF,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAKMQ,EAAWC,cAEjB,SAASN,EAAaC,GACpBJ,EAAS,2BACJD,GADG,kBAELK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,QAE7B,CAdsC,4CAgBvC,WAA4BH,GAA5B,SAAAM,EAAA,6DACEN,EAAEO,iBADJ,kBAIU5C,EAAYe,MAAMiB,GAJ5B,OAMIrD,EAAMsE,sBAENR,EAAS,SARb,gDAaIZ,EAAS,KAAIF,SAbjB,0DAhBuC,sBAiCvC,OACI,cAACuB,EAAA,EAAD,CACEC,UAAU,SACV7F,MAAO,CAAE8F,OAAQ,QAASC,MAAO,SACjCC,cAAc,SAHhB,SAKE,eAACJ,EAAA,EAAKK,OAAN,CAAajG,MAAO,CAAEkG,SAAU,KAAhC,UACE,eAACrG,EAAA,EAAD,CAAQoB,GAAG,KAAKhB,MAAM,OAAO4F,UAAU,SAAvC,UACE,cAACtF,EAAA,EAAD,CAAOC,IAAI,oCADb,6BAIA,cAAC2F,EAAA,EAAD,CAAMC,SA5CyB,4CA4C/B,SACE,eAACC,EAAA,EAAD,CAASC,SAAO,EAAhB,UACE,cAACH,EAAA,EAAKI,MAAN,CACEI,KAAK,QACL1B,KAAK,QACLuB,YAAY,QACZtB,MAAOR,EAAMF,MACbiC,SAAU3B,EACV4B,UAAQ,IAEV,cAACP,EAAA,EAAKI,MAAN,CACEtB,KAAK,WACL0B,KAAK,WACLH,YAAY,WACZtB,MAAOR,EAAMD,SACbgC,SAAU3B,EACV4B,UAAQ,IAEV,cAACI,EAAA,EAAD,CACE7G,MAAM,OACN+G,OAAK,EACLC,KAAK,QACLN,KAAK,SACLhH,UAAU,MALZ,wBAWJ,eAACuH,EAAA,EAAD,yBACa,cAAC,IAAD,CAAMpH,GAAG,UAAT,wBAEZwB,EAAQ,cAACF,EAAD,CAAcE,MAAOA,IAAY,SAInD,C,oBC1Fc,SAAS6F,EAAT,GAAgC,EAAhB5H,aAE3B,OACI,eAAC6H,EAAA,EAAD,CAAWzH,UAAU,gBAArB,UACI,qBAAKA,UAAU,gBAAgBa,IAAK,kCAAmC6G,IAAI,QAE3E,uBACA,sBAAK1H,UAAU,cAAf,UACI,uDACA,kEACA,mFAEJ,sBAAKA,UAAU,aAAf,UACI,8CACA,mBAAGoB,KAAK,UAAUpB,UAAU,SAA5B,SACA,cAACmH,EAAA,EAAD,CAAQQ,OAAK,EAACrH,MAAM,SAApB,8BAKf,C,sCCpBc,SAASsH,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,iBAIjC,EAA0BhI,mBAAS,CAC/ByF,KAAM,GACNwC,MAAO,GACPC,OAAQ,GACRC,OAAQ,KAJZ,mBAAOjD,EAAP,KAAcC,EAAd,KAOA,SAASG,EAAaC,GAClBJ,EAAS,2BACFD,GADC,kBAEHK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,QAEjC,CAgBD,OACI,cAAC0C,EAAA,EAAD,CAAMjI,UAAU,OAAOK,MAAO,CAAE+F,MAAO,MAAO8B,WAAY,oBAA1D,SACI,eAAC1B,EAAA,EAAD,CAAMC,SAhBd,SAAsBrB,GAElBA,EAAEO,iBAEFkC,EADoB9C,GAEpBC,EAAS,CACLM,KAAM,GACNwC,MAAO,GACPC,OAAQ,GACRC,OAAQ,IAEf,EAKO,UACA,gDACI,eAACxB,EAAA,EAAK2B,MAAN,CAAY9H,MAAO,CAAC+H,OAAO,UAA3B,UACI,cAAC5B,EAAA,EAAKI,MAAN,CACI5G,UAAU,eACVsF,KAAK,OACLC,MAAOR,EAAMO,KACbuB,YAAY,OACZC,SAAU3B,EACV4B,UAAQ,IAEZ,cAACP,EAAA,EAAKI,MAAN,CACI5G,UAAU,eACVsF,KAAK,QACLC,MAAOR,EAAM+C,MACbjB,YAAY,QACZC,SAAU3B,EACV4B,UAAQ,IAEZ,cAACP,EAAA,EAAKI,MAAN,CACI5G,UAAU,eACVsF,KAAK,SACLC,MAAOR,EAAMgD,OACblB,YAAY,SACZC,SAAU3B,EACV4B,UAAQ,IAEZ,cAACP,EAAA,EAAKI,MAAN,CACI5G,UAAU,eACVsF,KAAK,SACLC,MAAOR,EAAMiD,OACbnB,YAAY,SACZC,SAAU3B,EACV4B,UAAQ,OAGhB,cAACI,EAAA,EAAD,CAAQ9G,MAAO,CAAC+H,OAAQ,OAAQpB,KAAK,SAAS1G,MAAM,OAAON,UAAU,MAArE,6BAIf,C,OC3Ec,SAASqI,EAAT,GAA6D,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,oBAEhD,EAAmB1I,oBAAS,GAArBmF,EAAP,oBAYA,OACI,eAACiD,EAAA,EAAD,CAAMjI,UAAU,OAAyBwI,QAAM,EAA/C,UACI,eAAC9B,EAAA,EAAD,CAAS1G,UAAU,UAAnB,UACI,uCAAUsI,EAAQhD,QAClB,wCAAWgD,EAAQR,SACnB,yCAAYQ,EAAQP,UACpB,yCAAYO,EAAQN,aAExB,cAACxB,EAAA,EAAD,CAAMC,SAjBd,SAAsBrB,GAClBA,EAAEO,iBACF,IAAM8C,EAAUH,EAAQI,IACxBjF,QAAQC,IAAI+E,EAAS,gCACrBF,EAAoBE,GACpBzD,GAAS,EACZ,EAWO,SACI,cAACmC,EAAA,EAAD,CAAQH,KAAK,SAAS1G,MAAM,MAA5B,gCARoBgI,EAAQI,IAY3C,CC3Bc,SAASC,EAAT,GAAyE,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,YAAaN,EAAuB,EAAvBA,oBAE5D,OACI,mCACI,cAACN,EAAA,EAAKE,MAAN,CAAYU,YAAaA,EAAaC,WAAS,EAA/C,SACKF,EAASG,KAAI,SAACT,GACX,OACI,cAACD,EAAD,CACIC,QAASA,EAETC,oBAAqBA,GADhBD,EAAQI,IAIxB,OAIhB,CCnBD,IAAM5F,EAAW,eAEV,SAASkG,EAAOV,GAEnB,OADA7E,QAAQC,IAAI,sBAAuB4E,GAC5BrF,MAAMH,EAAU,CACnBI,OAAQ,OACRC,KAAMnB,KAAKkC,UAAUoE,GACrBtE,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYxB,EAAaZ,cAE/CwB,MAAM,SAAAC,GACL,GAAGA,EAAIC,GAAI,OAAOD,EAAIE,OAEtB,MAAM,IAAII,MAAM,wCACnB,GACJ,CAEQ,SAASsF,EAAcC,GAC5B,OAAOjG,MAAM,GAAD,OAAIH,EAAJ,YAAgBoG,GAAa,CACvChG,OAAQ,SACRc,QAAS,CACP,eAAgB,mBAChBK,cAAe,UAAY7B,EAAaZ,cAEzCwB,MAAK,SAACC,GACP,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OAEvB,MAAM,IAAII,MAAMN,EAAI1B,MAAO,gDAC5B,GACF,CAEM,SAASwH,IACd,OAAOlG,MAAMH,EAAU,CACrBkB,QAAS,CACP,eAAgB,mBAChBK,cAAe,UAAY7B,EAAaZ,cAEzCwB,MAAK,SAACC,GACP,OAAIA,EAAIC,GAAWD,EAAIE,OAEhBF,EAAIE,OAAOH,MAAK,SAACI,GAEtB,MADAC,QAAQC,IAAIF,GACN,IAAIG,MAAMH,EAASI,IAAK,uCAC/B,GACF,GACF,CCvCY,SAAS4D,EAAT,GAAgC,EAAhB5H,aAAiB,IAE5C,EAAgCC,mBAAS,IAAzC,mBAAO+I,EAAP,KAAiBQ,EAAjB,KAF2C,SAI5BD,IAJ4B,2EAI3C,4BAAAzD,EAAA,+EAE+B2D,IAF/B,OAEc7F,EAFd,OAGQ4F,EAAY,YAAI5F,EAAS8F,OAHjC,gDAKQ7F,QAAQC,IAAR,KAAiB,0BALzB,0DAJ2C,kEAkB3C,WAAgC4E,GAAhC,eAAA5C,EAAA,+EAE+B2D,EAAkBf,GAFjD,OAEc9E,EAFd,OAGQC,QAAQC,IAAIF,GACZ2F,IAJR,gDAOQ1F,QAAQC,IAAI,2CAAZ,MAPR,0DAlB2C,kEA6B3C,WAAmC4E,GAAnC,eAAA5C,EAAA,+EAE+B2D,EAAyBf,GAFxD,OAEc9E,EAFd,OAGQC,QAAQC,IAAIF,GACZ2F,IAJR,gDAMQ1F,QAAQC,IAAI,6CANpB,0DA7B2C,sBAuC3C,OA1BA6F,qBAAU,WAENJ,GACH,GAAE,IAwBC,mCACA,eAAC1B,EAAA,EAAD,CAAWzH,UAAU,gBAArB,UACI,qBAAKA,UAAU,gBAAgBa,IAAK,kCAAmC6G,IAAI,QAE3E,uBACA,qBAAK1H,UAAU,cAAf,SACI,4CAEJ,eAACiG,EAAA,EAAD,WACI,cAACA,EAAA,EAAKuD,IAAN,CAAUC,UAAQ,EAAlB,SACI,cAAC,EAAD,CAAYzJ,UAAU,aAAa6H,iBAlDR,gDAoD/B,cAAC5B,EAAA,EAAKuD,IAAN,CAAUxJ,UAAU,QAAQyJ,UAAQ,EAApC,SACI,cAACxD,EAAA,EAAKK,OAAN,CAAajG,MAAO,CAAEkG,SAAU,KAAhC,SACI,cAACoC,EAAD,CACIC,SAAUA,EACVL,oBAxDmB,4CAyDnBM,YAAa,eAQxC,CCUca,MAxEf,WACE,IAAMlE,EAAWC,cACjB,EAAwB5F,mBAASkD,EAAYoB,WAA7C,mBAAOtB,EAAP,KAAa8G,EAAb,KAIA,SAAS3D,IACP2D,EAAQ5G,EAAYoB,UACrB,CAED,SAASvE,IACPmD,EAAYc,SACZ8F,EAAQ,MACRnE,EAAS,IACV,CAED,OAAI3C,EAEA,mCACA,cAAC,IAAD,UACA,eAAC,IAAD,CAAO+G,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CACED,KAAK,UACLC,QAAS,cAAC,EAAD,CAAQE,aAAclH,EAAMjD,aAAcA,MAMrD,cAAC,IAAD,CACEgK,KAAK,SACLC,QAAS,cAAC,EAAD,CAAW7D,oBAAqBA,MAE3C,cAAC,IAAD,CACE4D,KAAK,UACLC,QAAS,cAAC,EAAD,CAAY7D,oBAAqBA,aAkBhD,eAAC,IAAD,WACE,cAAC,IAAD,CACE4D,KAAK,IACLC,QAAS,cAAC,EAAD,CAAMlK,WAAYkD,EAAMjD,aAAcA,MAEjD,cAAC,IAAD,CACEgK,KAAK,SACLC,QAAS,cAAC,EAAD,CAAW7D,oBAAqBA,MAE3C,cAAC,IAAD,CACE4D,KAAK,UACLC,QAAS,cAAC,EAAD,CAAY7D,oBAAqBA,MAE5C,cAAC,IAAD,CAAO4D,KAAK,KAAKC,QAAS,cAAC,IAAD,CAAU1J,GAAG,eAG5C,ECtEmB6J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAD,UAAQ,cAAC,EAAD,MACRC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvH,MAAK,SAAAwH,GACJA,EAAaC,YACd,IACAC,OAAM,SAAAnJ,GACL8B,QAAQ9B,MAAMA,EAAM+C,QACrB,G","file":"static/js/main.a296dda2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Menu, Header, Image, Dropdown } from \"semantic-ui-react\";\nimport \"./NavBar.css\";\n\nexport default function NavBar({ loggedUser, handleLogout }) {\n    const [showNav, setShowNav] = useState(false);\n\n    return (\n        <Menu borderless className=\"nav-bar\">\n            <Menu.Item>\n                <Header>\n                    <Link\n                        to=\"/\"\n                        id=\"logo\"\n                        style={{\n                            color: 'yellow',\n                            fontFamily: 'Pacifico',\n                            fontSize: '20px',\n                            letterSpacing: '.05rem',\n                        }}\n                    >\n                        Swimmingly\n                    </Link>\n                </Header>\n            </Menu.Item>\n            <Menu.Menu position=\"right\">\n                <Menu.Item>\n                    <Link to={`/${loggedUser?.username}`} style={{ color: 'black' }}>\n                        <Image\n                            src={\n                                loggedUser?.photoUrl\n                                    ? loggedUser?.photoUrl\n                                    : 'https://react.semantic-ui.com/images/wireframe/square-image.png'\n                            }\n                            avatar\n                        ></Image>\n                    </Link>\n                </Menu.Item>\n                <Dropdown item icon=\"bars yellow\">\n                    <Dropdown.Menu>\n                    <Dropdown.Item text=\"Dashboard\" href=\"/Dashboard\" />\n                    <Dropdown.Divider />\n                        <Dropdown.Item as=\"a\" href=\"/MyTeam\">\n                            My Team\n                        </Dropdown.Item>\n                        <Dropdown.Item text=\"Heatsheets\" href=\"/Heatsheet\" />\n                        <Dropdown.Item text=\"Schedule\" href=\"/Calendar\" />\n                        <Dropdown.Divider />\n                        <Dropdown.Item text=\"Profile Settings\" icon=\"setting\" />\n                        <Dropdown.Item\n                            text=\"Sign Out\"\n                            onClick={handleLogout}\n                            icon=\"sign out\"\n                        />\n                    </Dropdown.Menu>\n                </Dropdown>\n            </Menu.Menu>\n        </Menu>\n    );\n}","import { Outlet } from 'react-router-dom';\nimport NavBar from '../NavBar/NavBar';\nimport './Layout.css';\n\nconst Layout = () => {\n    return (\n        <div className=\"App\">\n          <NavBar />\n          <div className=\"page\">\n    \n            <Outlet />\n           \n          </div>\n        </div>\n      )\n    }\n\nexport default Layout","import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  const tokenService = {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };\n\n  export default tokenService;","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\nfunction getProfile(username){\n  console.log('getProfile calling')\n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // <- since this will be called when we're logged in, send over the jwt token\n      // so the server knows who's making the request from the client\n    }\n  }).then(res => {\n    // This function happens when the browser recieves a response from the express server\n    if(res.ok) return res.json();\n    throw new Error('Error from getProfile Request, check the server terminal!')\n  })\n}\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user // This is assuming you are sending multiform-data aka uploading a photo\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nconst userService = {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile,\n};\n\nexport default userService;\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction isPasswordMatch(passwordOne, passwordConf) {\n  return passwordOne === passwordConf;\n}\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  const navigate = useNavigate();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!isPasswordMatch(state.password, state.passwordConf)) return setError({ message: 'Passwords Must Match!', passwordError: true });\n    setError({ message: '', passwordError: false })\n\n    const formData = new FormData();\n\n    formData.append(\"photo\", selectedFile);\n\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    try {\n      await userService.signup(formData);\n\n      props.handleSignUpOrLogin();\n\n      navigate(\"/home\");\n    } catch (err) {\n\n      console.log(err);\n      setError({ message: err.message, passwordError: false });\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <Image src=\"https://i.imgur.com/Ql22AuM.png\" /> Sign Up\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              name=\"username\"\n              placeholder=\"username\"\n              value={state.username}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"passwordConf\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={state.passwordConf}\n              onChange={handleChange}\n              required\n            />\n            <Form.Field>\n              <Form.Input\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n            <Button type=\"submit\" className=\"btn\">\n              Signup\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n\n      navigate(\"/home\");\n\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      // this is from the throw block in the userService.login first then function\n      setError(err.message);\n    }\n  }\n\n  return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\", width: \"100vw\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image src=\"https://i.imgur.com/Ql22AuM.png\" /> Log-in to your\n            account\n          </Header>\n          <Form onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Button } from 'semantic-ui-react';\n\nimport \"./Home.css\"\n\nexport default function Home({ handleLogout }) {\n\n    return (\n        <Container className='backgroundImg'>\n            <img className='backgroundImg' src={'https://i.imgur.com/UeA0BjR.jpg'} alt=\"img\" >\n            </img>\n            <br />\n            <div className=\"WelcomeText\">\n                <h1>Welcome to Swimmingly</h1>\n                <h2>An easy-to-use team manager that</h2>\n                <h1>Takes the Stress out of Running your Swim Team</h1>\n            </div>\n            <div className='GetStarted'>\n                <h2>Get started!</h2>\n                <a href=\"/MyTeam\" className='button'>\n                <Button basic color=\"yellow\"> My Team </Button>\n                </a>\n            </div>\n        </Container>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Card, Form, Button } from \"semantic-ui-react\";\n// import { useNavigate } from \"react-router-dom\";\nimport './AddSwimmer.css'\n\nexport default function AddSwimmer({ handleAddSwimmer }) {\n\n    // const navigate = useNavigate();\n\n    const [state, setState] = useState({\n        name: \"\",\n        grade: \"\",\n        gender: \"\",\n        events: \"\",\n    });\n\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    function handleSubmit(e) {\n\n        e.preventDefault();\n        const requestData = state;\n        handleAddSwimmer(requestData);\n        setState({\n            name: \"\",\n            grade: \"\",\n            gender: \"\",\n            events: \"\",\n        })\n    }\n\n\n    return (\n        <Card className=\"card\" style={{ width: '77%', background: 'rgb(22, 58, 105)', }}>\n            <Form onSubmit={handleSubmit}>\n            <h3>Add a Swimmer:</h3>\n                <Form.Group style={{margin:'0 auto',}}>\n                    <Form.Input\n                        className=\"form-control\"\n                        name=\"name\"\n                        value={state.name}\n                        placeholder=\"Name\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <Form.Input\n                        className=\"form-control\"\n                        name=\"grade\"\n                        value={state.grade}\n                        placeholder=\"Grade\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <Form.Input\n                        className=\"form-control\"\n                        name=\"gender\"\n                        value={state.gender}\n                        placeholder=\"Gender\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <Form.Input\n                        className=\"form-control\"\n                        name=\"events\"\n                        value={state.events}\n                        placeholder=\"Events\"\n                        onChange={handleChange}\n                        required\n                    />\n                </Form.Group>\n                <Button style={{margin: '5px'}} type=\"submit\" color=\"blue\" className=\"btn\">Add Swimmer</Button>\n            </Form>\n        </Card>\n    );\n}","import React, { useState } from 'react';\nimport { Card, Form, Button, Segment } from \"semantic-ui-react\";\nimport './Swimmer.css'\n\nexport default function SwimmerComponent({ swimmer, handleDeleteSwimmer }) {\n\n    const [setState] = useState(false);\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const request = swimmer._id;\n        console.log(request, \"<- the deleteSwimmer request\")\n        handleDeleteSwimmer(request);\n        setState(false)\n    }\n\n\n    return (\n        <Card className='card' key={swimmer._id} raised>\n            <Segment className='content'>\n                <p>Name: {swimmer.name}</p>\n                <p>Grade: {swimmer.grade}</p>\n                <p>Gender: {swimmer.gender}</p>\n                <p>Events: {swimmer.events}</p>\n            </Segment>\n            <Form onSubmit={handleSubmit} >\n                <Button type=\"submit\" color=\"red\">Delete Swimmer</Button>\n            </Form>\n        </Card>\n    )\n}\n\n\n\n\n        // <Table >\n        //     <TableHeader>\n        //         Name\n        //     </TableHeader>\n        //     <TableBody>\n        //         name={swimmer.name}\n        //     </TableBody>\n        //     <TableHeader>\n        //         Grade\n        //     </TableHeader>\n        //     <TableBody>\n        //         grade={swimmer.grade}\n        //     </TableBody>\n        //     <TableHeader>\n        //         Gender\n        //     </TableHeader>\n        //     <TableBody>\n        //         gender={swimmer.gender}\n        //     </TableBody>\n        //     <TableHeader>\n        //         Events\n        //     </TableHeader>\n        //     <TableBody>\n        //         events={swimmer.events}\n        //     </TableBody>\n        //     <TableHeader>\n        //         Delete\n        //     </TableHeader>\n        //     <TableBody>\n        //             <Button onSubmit={handleSubmit} type=\"submit\" color=\"red\">Delete Game</Button>\n        //     </TableBody>\n        // </Table>\n  ","import React from 'react';\nimport { Card } from \"semantic-ui-react\";\nimport SwimmerComponent from '../Swimmer/Swimmer';\n\nexport default function SwimmerGallery({ swimmers, itemsPerRow, handleDeleteSwimmer }) {\n\n    return (\n        <>\n            <Card.Group itemsPerRow={itemsPerRow} stackable>\n                {swimmers.map((swimmer) => {\n                    return (\n                        <SwimmerComponent\n                            swimmer={swimmer}\n                            key={swimmer._id}\n                            handleDeleteSwimmer={handleDeleteSwimmer}\n                        />\n                    )\n                })}\n            </Card.Group>\n        </>\n    )\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/swimmer\";\n\nexport function create(swimmer) {\n    console.log('this is the swimmer', swimmer);\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: JSON.stringify(swimmer),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then( res => {\n        if(res.ok) return res.json()\n\n        throw new Error('Check your server terminal for error.')\n    }) \n}\n\n  export function deleteSwimmer(swimmerId) {\n    return fetch(`${BASE_URL}/${swimmerId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + tokenService.getToken(),\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n\n      throw new Error(res.error, '<< res.error from deleteSwimmer(): swimmerAPI');\n    });\n  }\n\n  export function getSwimmers() {\n    return fetch(BASE_URL, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + tokenService.getToken(),\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n  \n      return res.json().then((response) => {\n        console.log(response);\n        throw new Error(response.err, '<< response.err create(): swimmerAPI');\n      });\n    });\n  }","import React, { useState, useEffect } from 'react';\nimport NavBar from '../../components/NavBar/NavBar';\nimport { Grid, Container } from 'semantic-ui-react';\n\nimport \"./MyTeam.css\";\nimport AddSwimmer from '../../components/AddSwimmer/AddSwimmer';\nimport SwimmerGallery from '../../components/SwimmerGallery/SwimmerGallery';\nimport * as swimmerAPI from \"../../utils/swimmerAPI\"\n\nexport default function Home({ handleLogout }) {\n\n    const [swimmers, setSwimmers] = useState([]);\n\n    async function getSwimmers() {\n        try {\n            const response = await swimmerAPI.getSwimmers();\n            setSwimmers([...response.data]);\n        } catch (err) {\n            console.log(err, '<-erroe in getSwimmers');\n        }\n    }\n\n    useEffect(() => {\n\n        getSwimmers();\n    }, []);\n\n    async function handleAddSwimmer(swimmer) {\n        try {\n            const response = await swimmerAPI.create(swimmer);\n            console.log(response);\n            getSwimmers();\n            // setLoading(false);\n        } catch (err) {\n            console.log(\"Error in the handleAddSwimmer function: \", err);\n        }\n    }\n\n    async function handleDeleteSwimmer(swimmer) {\n        try {\n            const response = await swimmerAPI.deleteSwimmer(swimmer);\n            console.log(response);\n            getSwimmers();\n        } catch (err) {\n            console.log(\"Error in the handleDeleteSwimmer function\");\n        }\n    }\n\n    return (\n        <>\n        <Container className='backgroundImg'>\n            <img className='backgroundImg' src={'https://i.imgur.com/UeA0BjR.jpg'} alt=\"img\" >\n            </img>\n            <br />\n            <div className=\"WelcomeText\">\n                <h1>Swimmers</h1>\n            </div>\n            <Grid>\n                <Grid.Row centered>\n                    <AddSwimmer className=\"AddSwimmer\" handleAddSwimmer={handleAddSwimmer} />\n                </Grid.Row>\n                <Grid.Row className='cards' centered>\n                    <Grid.Column style={{ maxWidth: 750 }}>\n                        <SwimmerGallery\n                            swimmers={swimmers}\n                            handleDeleteSwimmer={handleDeleteSwimmer}\n                            itemsPerRow={6}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n        </>\n    );\n}\n\n    // const [error, setError] = useState('');\n    // const [loading, setLoading] = useState(true);\n    // const [swimmer, setSwimmer] = useState({});\n\n    // const [swimmers, setSwimmers] = useState([]);\n\n    // async function getAllSwimmers() {\n    //     try {\n    //         const response = await swimmerAPI.getSwimmer();\n    //         setSwimmers([...response.data]);\n    //         setLoading(false);\n    //     } catch (err) {\n    //         setLoading(false);\n    //     }\n    // }\n\n    // useEffect(() => {\n\n    //     getAllSwimmers();\n    // }, []);\n\n\n    // async function handleAddSwimmer(swimmer) {\n    //     try {\n    //         setLoading(true);\n    //         const response = await swimmerAPI.create(swimmer);\n    //         console.log(response);\n    //         getAllSwimmers();\n    //         setLoading(false);\n    //     } catch (err) {\n    //         console.log(\"Error in the handleAddSwimmer function: \", err);\n    //     }\n    // }\n\n    // async function handleDeleteSwimmer(swimmerId) {\n    //     try {\n    //         const response = await swimmerAPI.deleteSwimmer(swimmerId);\n    //         console.log(response);\n    //         getAllSwimmers();\n    //     } catch (err) {\n    //         console.log(\"Error in the handleDeleteSwimmer function\");\n    //     }\n    // }\n\n\n\n// ======================Alt return========================\n\n\n//         <Grid centered>\n//             <Grid.Row>\n//                 <Grid.Column>\n//                     <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n//                     {/* <AddTeamForm value={team.name} /> */}\n//                 </Grid.Column>\n//             </Grid.Row>\n//             <Grid.Row>\n//                 <Grid.Column style={{ maxWidth: 450 }}>\n//                     <NewSwimmerForm handleAddSwimmer={handleAddSwimmer} />\n//                     {/* <SwimmerGallery\n//                     // swimmer={swimmer}\n//                     handleDeleteSwimmer={handleDeleteSwimmer}\n//                     /> */}\n//                 </Grid.Column>\n//             </Grid.Row>\n//             <Grid.Row>\n//                 <tr>\n//                     <th>Name</th>\n//                     <th>Grade</th>\n//                     <th>Gender</th>\n//                     <th>Events</th>\n//                     <th>Delete</th>\n//                 </tr>\n//             </Grid.Row>\n//             <Grid.Row>\n//                 <Grid.Column style={{ maxWidth: 450 }}>\n//                     {swimmers.map((swimmer) =>\n//                         <>\n//                             <tr>\n//                                 <td>{swimmer.name}</td>\n//                                 <td>{swimmer.grade}</td>\n//                                 <td>{swimmer.gender}</td>\n//                                 <td>{swimmer.events}</td>\n//                                 <td><button handleDeleteSwimmer={handleDeleteSwimmer}>Delete</button></td>\n//                             </tr>\n//                         </>\n//                     )}\n//                 </Grid.Column>\n//             </Grid.Row>\n//         </Grid>\n//     );\n// }\n\n","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Layout from \"../../components/Layout/Layout\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport Home from \"../Home/Home\";\nimport MyTeam from \"../MyTeam/MyTeam\"\n\nimport userService from \"../../utils/userService\";\n\nfunction App() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n    navigate(\"/\");\n  }\n\n  if (user) {\n    return (\n      <>\n      <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<Home />} />\n        <Route\n          path=\"/MyTeam\"\n          element={<MyTeam loggedInUser={user} handleLogout={handleLogout} />}\n        />\n        {/* <Route\n          path=\"/:_id\"\n          element={<MyTeamPage loggedInUser={user} handleLogout={handleLogout} />}\n        /> */}\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        {/* <Route\n          path=\"/:username\"\n          element={<ProfilePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/heatsheet\"\n          element={<HeatsheetPage loggedUser={user} handleLogout={handleLogout} />}\n        /> */}\n        </Route>\n      </Routes>\n      </>\n    );\n  }\n\n// If user is not logged in, will only be able to do these\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={<Home loggedUser={user} handleLogout={handleLogout} />}\n      />\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}