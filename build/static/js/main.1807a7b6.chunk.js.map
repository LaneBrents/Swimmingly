{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/Header/Header.jsx","components/Loader/Loader.jsx","pages/Profile/Profile.jsx","components/HeatsheetInput/HeatsheetInput.jsx","utils/heatsheetAPI.js","pages/Heatsheet/Heatsheet.jsx","components/NewSwimmer/NewSwimmer.jsx","utils/swimmerAPI.js","pages/MyTeam/MyTeam.jsx","pages/Swimmer/Swimmer.jsx","components/CreateTeam/CreateTeam.jsx","utils/teamAPI.js","pages/Dashboard/Dashboard.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","tokenService","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","isPasswordMatch","passwordOne","passwordConf","SignUpPage","useState","message","passwordError","setError","email","password","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","name","value","a","preventDefault","key","formData","FormData","append","userService","handleSignUpOrLogin","Grid","textAlign","style","height","width","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","Field","files","Button","LoginPage","fluid","size","Message","to","PageHeader","loggedUser","handleLogout","floated","Icon","onClick","photoUrl","avatar","Loading","Loader","active","ProfilePage","setProfileUser","loading","setLoading","useParams","useCallback","data","useEffect","Row","centered","AddHeatsheetForm","meet","handleAddHeatsheet","create","heatsheet","getHeatsheet","HeatsheetPage","setHeatsheet","heatsheetAPI","NewSwimmerForm","grade","gender","events","handleAddSwimmer","swimmer","getSwimmer","MyTeam","swimmers","setSwimmers","getAllSwimmers","swimmerAPI","map","SwimmerPage","AddTeamForm","handleAddTeam","caption","team","getTeam","Dashboard","setTeam","teamAPI","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1807a7b6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\nfunction getProfile(username){\n  console.log('getProfile calling')\n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // <- since this will be called when we're logged in, send over the jwt token\n      // so the server knows who's making the request from the client\n    }\n  }).then(res => {\n    // This function happens when the browser recieves a response from the express server\n    if(res.ok) return res.json();\n    throw new Error('Error from getProfile Request, check the server terminal!')\n  })\n}\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user // This is assuming you are sending multiform-data aka uploading a photo\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile,\n};\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction isPasswordMatch(passwordOne, passwordConf) {\n  return passwordOne === passwordConf;\n}\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!isPasswordMatch(state.password, state.passwordConf)) return setError({ message: 'Passwords Must Match!', passwordError: true });\n    setError({ message: '', passwordError: false })\n\n    const formData = new FormData();\n\n    formData.append(\"photo\", selectedFile);\n\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    try {\n      await userService.signup(formData);\n\n      props.handleSignUpOrLogin();\n\n      navigate(\"/\");\n    } catch (err) {\n\n      console.log(err);\n      setError({ message: err.message, passwordError: false });\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <Image src=\"https://i.imgur.com/s4LrnlU.png\" /> Sign Up\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              name=\"username\"\n              placeholder=\"username\"\n              value={state.username}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"passwordConf\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={state.passwordConf}\n              onChange={handleChange}\n              required\n            />\n            <Form.Field>\n              <Form.Input\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n            <Button type=\"submit\" className=\"btn\">\n              Signup\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n\n      navigate(\"/dashboard\");\n\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      // this is from the throw block in the userService.login first then function\n      setError(err.message);\n    }\n  }\n\n  return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\", width: \"100vw\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image src=\"https://i.imgur.com/s4LrnlU.png\" /> Log-in to your\n            account\n          </Header>\n          <Form onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Segment, Image, Icon } from \"semantic-ui-react\";\n\nexport default function PageHeader({ loggedUser, handleLogout }) {\n    console.log(loggedUser, \"loggedUser in header\");\n    return (\n        <>\n            <Header as=\"h2\" floated=\"left\">\n                <Link to=\"/dashboard\">\n                    <Icon name=\"home\"></Icon>\n                </Link>\n\n            </Header>\n\n            <Header as=\"h2\" floated=\"center\">\n                {loggedUser ? (\n                    <>\n                        <Link to=\"/dashboard\"> Dashboard </Link>\n                        <Link to=\"/MyTeam\"> My Team </Link>\n                        <Link to=\"/Heatsheet\"> Heatsheet </Link>\n                    </>\n                ) : null}\n            </Header>\n\n            <Header as=\"h2\" floated=\"right\">\n                <Link to=\"\" onClick={handleLogout}>\n                    Logout\n                </Link>\n\n                {/* <Link to={`/${loggedUser?.username}`}>Login</Link> */}\n\n                <Link to={`/${loggedUser?.username}`}>\n                    <Image\n                        src={\n                            loggedUser?.photoUrl\n                                ? loggedUser?.photoUrl\n                                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                        }\n                        avatar\n                    ></Image>\n                </Link>\n            </Header>\n        </>\n    );\n}","import { Loader } from 'semantic-ui-react'\n\nexport default function Loading() {\n  return (\n \n        <Loader size=\"small\" active>\n          Loading\n        </Loader>\n\n  );\n}","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport PageHeader from \"../../components/Header/Header\";\nimport Loading from \"../../components/Loader/Loader\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport userService from \"../../utils/userService\";\n\nimport { useParams } from \"react-router-dom\";\n\nexport default function ProfilePage({ loggedUser, handleLogout }) {\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { username } = useParams(); // username is defined in the App folder in the Router path=\"/:username\"\n\n\n  const getProfile = useCallback(async () => {\n    try {\n      const response = await userService.getProfile(username); // this line evaluates to what the server responds to the request with\n      // after we get the response to the server\n      // so lets flip the loading state\n      setLoading(false);\n      setProfileUser(response.data.user);\n\n      console.log(response);\n    } catch (err) {\n      console.log(err.message);\n      setError(\"Profile does not exist! You are in the wrong in place\"); // < this is message we leave the user\n      // to see\n    }\n  }, [username]);\n\n  useEffect(() => {\n    console.log(\"firing!\");\n    // When the page loads, lets send a get request to the server\n    // to get whoever's profile page I'm on. (example, localhost:3000/jim) <-- jim's profile info I want to get\n\n    getProfile();\n  }, [username, getProfile]);\n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />;\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column style={{ maxWidth: 750 }}>\n\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}","import React, { useState } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nexport default function AddHeatsheetForm(props) {\n  // create the state, pay attention to how the inputs are setup!\n  const [state, setState] = useState({\n    meet: \"\",\n  });\n  // The function that handles the changes on the input, Look at the inputs for the name of it\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  function handleChange(e) {\n    setState({\n      meet: e.target.value,\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n    formData.append(\"meet\", state.meet);\n    props.handleAddHeatsheet(formData); \n  }\n\n  return (\n    <Segment>\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-control\"\n          name=\"meet\"\n          value={state.meet}\n          placeholder=\"What Swim Meet is this?\"\n          onChange={handleChange}\n          required\n        />\n        <Form.Field>\n          <Form.Input\n            type=\"file\"\n            name=\"photo\"\n            placeholder=\"Upload Heatsheet\"\n            onChange={handleFileInput}\n          />\n        </Form.Field>\n        <Button type=\"submit\" className=\"btn\">\n          Add Heatsheet\n        </Button>\n      </Form>\n    </Segment>\n  );\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/heatsheet\";\n\nexport function create(heatsheet) {\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: heatsheet,\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then( res => {\n        if(res.ok) return res.json()\n\n        throw new Error('Check your server terminal for error.')\n    }) \n}\n\nexport function getHeatsheet() {\n    return fetch(BASE_URL, {\n      headers: {\n        Authorization: 'Bearer ' + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n  \n      return res.json().then((response) => {\n        console.log(response);\n        throw new Error(response.err, '<< response.err create(): heatsheetAPI');\n      });\n    });\n  }\n\n  export function deleteHeatsheet(heatsheetID) {\n    return fetch(`${BASE_URL}/${heatsheetID}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + tokenService.getToken(),\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error, '<< res.error from deleteHeatsheet(): heatsheetAPI');\n    });\n  }","import React, { useState, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport PageHeader from \"../../components/Header/Header\";\nimport AddHeatsheetForm from '../../components/HeatsheetInput/HeatsheetInput';\nimport * as heatsheetAPI from \"../../utils/heatsheetAPI\";\n\nexport default function HeatsheetPage({ loggedUser, handleLogout }) {\n\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [heatsheet, setHeatsheet] = useState([]);\n\n    async function getHeatsheet() {\n        try {\n            const response = await heatsheetAPI.getHeatsheet();\n            setHeatsheet([...response.data]);\n            setLoading(false);\n        } catch(err) {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n\n        getHeatsheet();\n    }, []);\n\n\n    async function handleAddHeatsheet(heatsheet) {\n        try {\n            setLoading(true);\n            const response = await heatsheetAPI.create(heatsheet);\n            console.log(response);\n            getHeatsheet();\n            setLoading(false);\n        } catch (err) {\n            console.log(\"Error in the handleAddHeatsheet function: \", err);\n        }\n    }\n\n    async function handleDeleteHeatsheet(heatsheetId) {\n        try {\n            const response = await heatsheetAPI.deleteHeatsheet(heatsheetId);\n            console.log(response);\n            getHeatsheet();\n        } catch (err) {\n            console.log(\"Error in the handleDeleteHeatsheet function\");\n        }\n    }\n\n    return (\n<Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <AddHeatsheetForm handleAddHeatsheet={handleAddHeatsheet} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          {/* <Heatsheet\n            heatsheet={heatsheet}\n            numPhotosCol={1}\n          /> */}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}","import React, { useState } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NewSwimmerForm(props) {\n\n    const navigate = useNavigate();\n\n    const [state, setState] = useState({\n        name: \"\",\n        grade: \"\",\n        gender: \"\",\n        events: \"\",\n    });\n\n\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    async function handleSubmit(e) {\n\n        e.preventDefault();\n        console.log(state, 'this is the state');\n        try {\n            await props.handleAddSwimmer(state);\n            // navigate(\"/MyTeamView\");\n        } catch (err) {\n            console.log(err, \"<- in AddSwimmer\")\n        }\n    }\n\n\n    return (\n        <Segment>\n            <Form onSubmit={handleSubmit}>\n                <h2>Add a New Swimmer:</h2>\n                <Form.Input\n                    className=\"form-control\"\n                    name=\"name\"\n                    value={state.name}\n                    placeholder=\"Name\"\n                    onChange={handleChange}\n                    required\n                />\n                 <Form.Input\n                    className=\"form-control\"\n                    name=\"grade\"\n                    value={state.grade}\n                    placeholder=\"Grade\"\n                    onChange={handleChange}\n                    required\n                />\n                 <Form.Input\n                    className=\"form-control\"\n                    name=\"gender\"\n                    value={state.gender}\n                    placeholder=\"Gender\"\n                    onChange={handleChange}\n                    required\n                />\n                <Form.Input\n                    className=\"form-control\"\n                    name=\"events\"\n                    value={state.events}\n                    placeholder=\"Events\"\n                    onChange={handleChange}\n                    required\n                />\n                <Button type=\"submit\" className=\"btn\">\n                    Add Swimmer and Events\n                </Button>\n            </Form>\n        </Segment>\n    );\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/swimmer\";\n\nexport function create(swimmer) {\n    console.log('this is the swimmer', swimmer);\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: JSON.stringify(swimmer),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then( res => {\n        if(res.ok) return res.json()\n\n        throw new Error('Check your server terminal for error.')\n    }) \n}\n\nexport function getAllSwimmers() {\n    return fetch(BASE_URL, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n  \n      return res.json().then((response) => {\n        console.log(response);\n        throw new Error(response.err, '<< response.err create(): swimmerAPI');\n      });\n    });\n  }\n\n\nexport function getSwimmer() {\n    return fetch(BASE_URL, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n  \n      return res.json().then((response) => {\n        console.log(response);\n        throw new Error(response.err, '<< response.err create(): swimmerAPI');\n      });\n    });\n  }\n\n  export function deleteSwimmer(swimmerID) {\n    return fetch(`${BASE_URL}/${swimmerID}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + tokenService.getToken(),\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error, '<< res.error from deleteSwimmer(): swimmerAPI');\n    });\n  }\n\n//   export function updateSwimmer(swimmerID) {\n//     return fetch(`${BASE_URL}/${swimmerID}`, {\n//         method: 'UPDATE',\n//         headers: {\n//           Authorization: 'Bearer ' + tokenService.getToken(),\n//         },\n//       }).then((res) => {\n//         if (res.ok) return res.json();\n//         throw new Error(res.error, '<< res.error from deleteSwimmer(): swimmerAPI');\n//       });\n//     }","import React, { useState, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport PageHeader from \"../../components/Header/Header\";\nimport Loading from \"../../components/Loader/Loader\";\nimport NewSwimmerForm from '../../components/NewSwimmer/NewSwimmer';\nimport * as swimmerAPI from \"../../utils/swimmerAPI\"; \n\nexport default function MyTeam({ loggedUser, handleLogout }) {\n\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [swimmer, setSwimmer] = useState({});\n    \n    const [swimmers, setSwimmers] = useState([]);\n\n    async function getAllSwimmers() {\n        try {\n            const response = await swimmerAPI.getSwimmer();\n            setSwimmers([...response.data]);\n            setLoading(false);\n        } catch(err) {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n\n        getAllSwimmers();\n    }, []);\n\n\n    async function handleAddSwimmer(swimmer) {\n        try {\n            setLoading(true);\n            const response = await swimmerAPI.create(swimmer);\n            console.log(response);\n\n            getAllSwimmers();\n            setLoading(false);\n        } catch (err) {\n            console.log(\"Error in the handleAddSwimmer function: \", err);\n        }\n    }\n\n    async function handleDeleteSwimmer(swimmerId) {\n        try {\n            const response = await swimmerAPI.deleteSwimmer(swimmerId);\n            console.log(response);\n            getAllSwimmers();\n        } catch (err) {\n            console.log(\"Error in the handleDeleteSwimmer function\");\n        }\n    }\n\n\n    return (\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <NewSwimmerForm handleAddSwimmer={handleAddSwimmer} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 450 }}>\n                {swimmers.map((swimmer) => <>{swimmer.name}</>)}\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n\n","import React from 'react';\nimport PageHeader from '../../components/Header/Header';\n\n\nexport default function SwimmerPage({ loggedUser, handleLogout }) {\n    return (\n        <>\n            <div>\n                <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n            </div>\n            <div className=\"App\">\n                <table>\n                    <tr>\n                        <th>Name</th>\n                        <th>Grade</th>\n                        <th>Gender</th>\n                        <th>Events</th>\n                        <th>Notes</th>\n                    </tr>\n                    <tr>\n                        {/* <td>{{Name}}</td>\n          <td>{{Grade}}</td>\n          <td>{{Gender}}</td>\n          <td>{{Events}}</td>\n          <td>{{Note}}</td> */}\n                    </tr>\n                </table>\n            </div>\n        </>\n    );\n}","import React, { useState } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nexport default function AddTeamForm(props) {\n    const [state, setState] = useState({\n        name: \"\",\n    });\n\n  function handleChange(e) {\n    setState({\n      caption: e.target.value,\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"name\", state.name);\n    props.handleAddTeam(formData);\n  }\n\n  return (\n    <Segment>\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-control\"\n          name=\"name\"\n          value={state.name}\n          placeholder=\"What's Your Team Name?\"\n          onChange={handleChange}\n          required\n        />\n        <Button type=\"submit\" className=\"btn\">\n          Create Team\n        </Button>\n      </Form>\n    </Segment>\n  );\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/team\";\n\nexport function create(team) {\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: team,\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then( res => {\n        if(res.ok) return res.json()\n\n        throw new Error('Check your server terminal for error.')\n    }) \n}\n\nexport function getTeam() {\n    return fetch(BASE_URL, {\n      headers: {\n        Authorization: 'Bearer ' + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n  \n      return res.json().then((response) => {\n        console.log(response);\n        throw new Error(response.err, '<< response.err create(): teamAPI');\n      });\n    });\n  }\n\n  export function deleteTeam(teamID) {\n    return fetch(`${BASE_URL}/${teamID}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + tokenService.getToken(),\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error, '<< res.error from deleteTeam(): teamAPI');\n    });\n  }","import React, { useState, useEffect } from 'react';\n\nimport PageHeader from \"../../components/Header/Header\";\nimport { Grid } from 'semantic-ui-react';\n\nimport MyTeam from '../MyTeam/MyTeam';\nimport AddTeamForm from '../../components/CreateTeam/CreateTeam';\nimport * as teamAPI from \"../../utils/teamAPI\";\n\nexport default function Dashboard({ loggedUser, handleLogout }) {\n\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [team, setTeam] = useState([]);\n\n    async function getTeam() {\n        try {\n            const response = await teamAPI.getTeam();\n            setTeam([...response.data]);\n            setLoading(false);\n        } catch(err) {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n\n        getTeam();\n    }, []);\n\n    async function handleAddTeam(team) {\n        try {\n            setLoading(true);\n            const response = await teamAPI.create(team); \n            console.log(response);\n            getTeam();\n            setLoading(false);\n        } catch (err) {\n            console.log(\"Error in the handleAddTeam function: \", err);\n        }\n    }\n\n    async function handleDeleteTeam(team) {\n        try {\n            const response = await teamAPI.deleteTeam(team);\n            console.log(response);\n            getTeam();\n        } catch (err) {\n            console.log(\"Error in the handleDeleteTeam function\");\n        }\n    }\n\n    return (\n        <> \n             <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n            <div className=\"MyDashboard\">\n                <h2>Welcome to Swimmingly!</h2>\n                <p>Swimmingly is an easy team manager that tracks your swim teams members as well as their times and events</p>\n                <h3>Get started below by creating a team!</h3>\n            </div>\n            <Grid>\n                <Grid.Row centered>\n                     <AddTeamForm handleAddTeam={handleAddTeam} />\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column style={{ maxWidth: 750 }}>\n                        {/* <MyTeam\n                            team={team}\n                            handleDeleteTeam={handleDeleteTeam}\n                            itemsPerRow={3} /> */}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid> \n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport ProfilePage from \"../Profile/Profile\";\n\nimport userService from \"../../utils/userService\";\n\nimport HeatsheetPage from \"../Heatsheet/Heatsheet\";\nimport MyTeamPage from \"../MyTeam/MyTeam\";\nimport SwimmerPage from \"../Swimmer/Swimmer\";\nimport Dashboard from \"../Dashboard/Dashboard\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\nconsole.log('this is the user', user);\n  if (user) {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<h1>This is Home Page!</h1>} />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/:username\"\n          element={<ProfilePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/heatsheet\"\n          element={<HeatsheetPage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/myteam\"\n          element={<MyTeamPage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/swimmer\"\n          element={<SwimmerPage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/dashboard\"\n          element={<Dashboard loggedUser={user} handleLogout={handleLogout} />}\n        />\n      </Routes>\n\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}